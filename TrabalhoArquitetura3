# Trabalho Prático 3 (10 pts) - Praticando condições em MIPS [Entrega dia 05/06/2022]
# Imagine que você está fazendo uma compra no mercado, e você possui em sua carteira, 100 reais, 
# com a seguinte combinação de cédulas:

# 2 cédulas de R$ 20,00
# 3 cédulas de R$ 10,00
# 2 cédulas de R$ 5,00
# 5 cédulas de R$ 2,00
# 10 moedas de R$ 1,00
# Elabore um programa em MIPS, utilizando o simulador MARS (apresentado em sala de aula), 
# para receber um valor da sua compra (valor INTEIRO), e em seguida calcule e informe o número MÍNIMO NECESSÁRIO DE CADA cédula/moeda
# para pagar a referida compra. Caso a compra exceda o valor disponível na carteira, deve ser apresentada uma mensagem
# de erro indicando o ocorrido.

# Ex 1:
# Valor da Compra: 68
# 2 2 1 1 1

# Ex 2:
# Valor da Compra: 13
# 0 1 0 1 1


.data

array1: 2
array2: 3
array3: 2
array4: 5
array5: 10




$soma: .asciiz  "soma: \n" #declara variavel soma como 'soma: \n'
$divisao: .asciiz "\ndivisao: \n" #declara variavel divisao como 'divisao: \n'

message1: .asciiz "\n Qual o valor da compra? :\n"


.text
main:
	li $v0,4 #comando de impressão de inteiro na tela
	la $a0, $message1 #coloca o texto da compra para ser impresso
	syscall # efetua a chamada ao sistema
	
	li $v0, 5 #le entrada do usuário
	syscall #faz chamada ao sistema
	
	move $s0, $v0 # move conteúdo de $v0 para $s0
	
	li $v0,4 #comando de impressão de inteiro na tela
	la $a0, $message2 #coloca o texto soma para ser impresso
	syscall # efetua a chamada ao sistema
	
	li $v0, 5 #le entrada do usuário
	syscall # efetua a chamada ao sistema
	
	move $s1, $v0 # move conteúdo de $v0 para $s1
	
	li $v0,4 #comando de impressão de inteiro na tela
	la $a0, $message3 #coloca o texto soma para ser impresso
	syscall # efetua a chamada ao sistema
	
	li $v0, 5 #le entrada do usuário
	syscall # efetua a chamada ao sistema
	
	move $s2, $v0 # move conteúdo de $v0 para $s2
	

        divisaoOp:
	li $v0,4 #comando de impressão de inteiro na tela
	la $a0, $divisao #coloca o texto divisao para ser impresso
	syscall # efetua a chamada ao sistema

	div $s2,$s1,array1 #divide os valores dos registradores $s0 e $s1 e insere o resultado no registrador $s2
	j termina #desvia para termina
	
        termina:
	li $v0,1 #comando de impressão de inteiro na tela
	la $a0, ($s2) #coloca o registrador $s2 para ser impresso
	syscall # efetua a chamada ao sistema
	
	li $v0, 10 # comando de exit
	syscall # efetua a chamada ao sistema








	
	
	
	
	
		










